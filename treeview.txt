https://github.com/AsmrProg-YT/100-days-of-javascript/tree/master/Day%20%2321%20-%20Spin%20Wheel%20App 


Sub GenerateTreeViewHTML()
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    Dim nodes As Collection
    Dim rootNode As Object
    Dim html As String

    Set db = CurrentDb
    Set nodes = New Collection
    
    ' Fetch the hierarchical data
    Set rs = db.OpenRecordset( _
        "SELECT id, question_id, answer_id, next_question_id " & _
        "FROM tbl_questions_answers " & _
        "ORDER BY id;")
    
    ' Convert data to nested dictionary structure
    Do While Not rs.EOF
        Dim node As Object
        Set node = CreateObject("Scripting.Dictionary")
        node("id") = rs!id
        node("question_id") = rs!question_id
        node("answer_id") = rs!answer_id
        node("next_question_id") = rs!next_question_id
        node("children") = New Collection
        nodes.Add node
        rs.MoveNext
    Loop
    rs.Close
    
    ' Build tree structure
    Set rootNode = CreateObject("Scripting.Dictionary")
    rootNode("children") = New Collection

    Dim i As Integer
    For i = 1 To nodes.Count
        Dim n As Object
        Set n = nodes(i)
        If IsNull(n("next_question_id")) Then
            rootNode("children").Add n
        Else
            Dim parent As Object
            Set parent = GetNodeByNextQuestionId(nodes, n("next_question_id"))
            If Not parent Is Nothing Then
                parent("children").Add n
            End If
        End If
    Next i

    ' Generate HTML
    html = "<ul>" & TreeToHTML(rootNode("children")) & "</ul>"

    ' Output the HTML
    Debug.Print html
End Sub

Function GetNodeByNextQuestionId(nodes As Collection, nextQuestionId As Long) As Object
    Dim i As Integer
    For i = 1 To nodes.Count
        If nodes(i)("id") = nextQuestionId Then
            Set GetNodeByNextQuestionId = nodes(i)
            Exit Function
        End If
    Next i
    Set GetNodeByNextQuestionId = Nothing
End Function

Function TreeToHTML(tree As Collection) As String
    Dim html As String
    html = ""
    
    Dim i As Integer
    For i = 1 To tree.Count
        Dim node As Object
        Set node = tree(i)
        
        ' Fetch question and answer text
        Dim questionCode As String
        Dim answerText As String
        questionCode = GetQuestionCode(node("question_id"))
        answerText = GetAnswerText(node("answer_id"))
        
        html = html & "<li>Question Code: " & questionCode & "<br>Answer: " & answerText
        If node("children").Count > 0 Then
            html = html & "<ul>" & TreeToHTML(node("children")) & "</ul>"
        End If
        html = html & "</li>"
    Next i
    
    TreeToHTML = html
End Function

Function GetQuestionCode(questionId As Long) As String
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    Set db = CurrentDb
    Set rs = db.OpenRecordset("SELECT txt_code FROM tbl_questions WHERE id = " & questionId)
    If Not rs.EOF Then
        GetQuestionCode = rs!txt_code
    Else
        GetQuestionCode = ""
    End If
    rs.Close
End Function

Function GetAnswerText(answerId As Long) As String
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    Set db = CurrentDb
    Set rs = db.OpenRecordset("SELECT answer_text FROM tbl_answers WHERE id = " & answerId)
    If Not rs.EOF Then
        GetAnswerText = rs!answer_text
    Else
        GetAnswerText = ""
    End If
    rs.Close
End Function


//CSS
/* Basic reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: Arial, sans-serif;
}

ul {
    list-style-type: none;
    padding-left: 1em;
    position: relative;
}

ul::before {
    content: "";
    border-left: 1px solid #ccc;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
}

li {
    margin: 1em 0;
    padding-left: 1em;
    position: relative;
}

li::before {
    content: "";
    border-top: 1px solid #ccc;
    position: absolute;
    top: 1em;
    left: 0;
    width: 1em;
    height: 0;
}

li::after {
    content: "";
    border-left: 1px solid #ccc;
    position: absolute;
    top: 1em;
    left: 0;
    bottom: -1em;
}

li:last-child::after {
    height: 1em;
}

li > ul::before {
    border-left: 1px solid #ccc;
    position: absolute;
    top: -1em;
    bottom: 0;
    left: 0;
}

.tree-node {
    display: inline-block;
    padding: 0.5em 1em;
    border: 1px solid #ccc;
    border-radius: 4px;
    background: #f9f9f9;
    position: relative;
}

.tree-node::before,
.tree-node::after {
    content: "";
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}

.tree-node::before {
    border-left: 1px solid #ccc;
    left: -1em;
    width: 1em;
    height: 0;
}

.tree-node::after {
    border-top: 1px solid #ccc;
    top: 50%;
    left: -1em;
    width: 1em;
}

.tree-node:first-child::before,
.tree-node:first-child::after {
    display: none;
}

.tree-node:first-child::after {
    border-top: none;
    height: 1em;
    top: 0;
}

.tree-node:last-child::after {
    height: 1em;
    top: auto;
    bottom: 0;
}


//HTML
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tree View Flowchart</title>
    <style>
        /* Include the CSS from above here */
    </style>
</head>
<body>
    <ul>
        <li>
            <div class="tree-node">Question Code: Q1<br>Answer: A1</div>
            <ul>
                <li>
                    <div class="tree-node">Question Code: Q2<br>Answer: A2</div>
                    <ul>
                        <li><div class="tree-node">Question Code: Q3<br>Answer: A3</div></li>
                    </ul>
                </li>
                <li><div class="tree-node">Question Code: Q4<br>Answer: A4</div></li>
            </ul>
        </li>
    </ul>
</body>
</html>


